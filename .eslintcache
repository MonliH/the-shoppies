[{"/home/jonathan/Documents/programming/the-shoppies/src/components/IndexPage.tsx":"1","/home/jonathan/Documents/programming/the-shoppies/src/components/Nominations.tsx":"2","/home/jonathan/Documents/programming/the-shoppies/src/components/MovieCard.tsx":"3","/home/jonathan/Documents/programming/the-shoppies/src/lib/api.tsx":"4","/home/jonathan/Documents/programming/the-shoppies/src/components/MovieInfoPopup.tsx":"5","/home/jonathan/Documents/programming/the-shoppies/src/components/MovieResults.tsx":"6","/home/jonathan/Documents/programming/the-shoppies/src/components/Text.tsx":"7","/home/jonathan/Documents/programming/the-shoppies/src/components/Wrappers.tsx":"8"},{"size":5436,"mtime":1609422051406,"results":"9","hashOfConfig":"10"},{"size":6222,"mtime":1609379125707,"results":"11","hashOfConfig":"10"},{"size":4042,"mtime":1609471600490,"results":"12","hashOfConfig":"10"},{"size":2119,"mtime":1609471631174,"results":"13","hashOfConfig":"10"},{"size":8056,"mtime":1609471975097,"results":"14","hashOfConfig":"10"},{"size":4847,"mtime":1609422101672,"results":"15","hashOfConfig":"10"},{"size":1155,"mtime":1609431646634,"results":"16","hashOfConfig":"10"},{"size":489,"mtime":1609428544993,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1j8um5d",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jonathan/Documents/programming/the-shoppies/src/components/IndexPage.tsx",["35"],"/home/jonathan/Documents/programming/the-shoppies/src/components/Nominations.tsx",[],"/home/jonathan/Documents/programming/the-shoppies/src/components/MovieCard.tsx",[],"/home/jonathan/Documents/programming/the-shoppies/src/lib/api.tsx",[],"/home/jonathan/Documents/programming/the-shoppies/src/components/MovieInfoPopup.tsx",["36"],"import React, { ReactNode, useState, useRef, useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { animated, useSpring } from \"react-spring\";\nimport * as FeatherIcons from \"react-feather\";\n\nimport { VerticalWrapper, FullHorizontalWrapper } from \"components/Wrappers\";\nimport { MovieImage } from \"components/MovieCard\";\nimport { MediumHeading, NormalTextSmall } from \"components/Text\";\nimport { RemoveButton } from \"components/Widget\";\n\nimport { FullMovie } from \"lib/movieModel\";\nimport { getLinkHighRes, addAnd } from \"lib/api\";\n\nconst PopupContainer = styled.div`\n  background: none;\n  position: fixed;\n  z-index: 25;\n\n  margin: 0;\n  padding: 0;\n\n  top: 0;\n  left: 0;\n\n  align-items: center;\n  justify-content: center;\n\n  /* Cover the entire viewport */\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst PopupBackground = styled(animated.div)`\n  background-color: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(2px);\n\n  position: absolute;\n\n  margin: 0;\n  padding: 0;\n\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Popup = styled(animated.div)`\n  width: fit-content;\n  height: fit-content;\n  max-height: 80vh;\n  max-width: 1000px;\n\n  position: relative;\n\n  margin: 0;\n  padding: 30px;\n\n  background-color: ${(props) => props.theme.backgroundTwo};\n\n  border-radius: 4px;\n`;\n\nconst MovieInfoImage = styled(MovieImage)`\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n  font-size: 64px;\n  margin-right: 20px;\n  object-fit: cover;\n`;\n\nconst MovieFactDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: fit-content;\n  margin-bottom: 10px;\n`;\n\nconst IconWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  margin-right: 7px;\n`;\n\nconst TextWrapper = styled.div`\n  margin-top: 3px;\n`;\n\nconst FactsWrapper = styled(VerticalWrapper)`\n  padding-right: 30px;\n  margin-top: 20px;\n  max-width: 550px;\n  height: fit-content;\n  max-height: calc(80vh - 80px);\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst MovieFact = <T,>({\n  children,\n  Icon,\n  value,\n  notFoundText,\n}: {\n  children: ReactNode;\n  Icon: React.FC<FeatherIcons.IconProps>;\n  value?: T | null;\n  notFoundText?: string;\n}) => {\n  return (\n    <MovieFactDiv>\n      <IconWrapper>\n        <Icon size={24} />\n      </IconWrapper>\n      <TextWrapper>\n        {value !== null ? (\n          children\n        ) : (\n          <NormalTextSmall>{notFoundText}</NormalTextSmall>\n        )}\n      </TextWrapper>\n    </MovieFactDiv>\n  );\n};\n\nconst MovieInfoPopup = ({\n  fullInfo,\n  visible,\n  onClose,\n}: {\n  fullInfo: FullMovie | null;\n  visible: boolean;\n  onClose: () => void;\n}) => {\n  const [display, setDisplay] = useState(\"none\");\n\n  const popupStyle = useSpring({\n    opacity: visible ? 1 : 0,\n    transform: visible ? \"translate3d(0, 0, 0)\" : \"translate3d(0, -100vh, 0)\",\n    onRest: () => {\n      setDisplay((display) => (visible ? display : \"none\"));\n    },\n  });\n  const backgroundStyle = useSpring({\n    opacity: visible ? 1 : 0,\n    onStart: () => {\n      setDisplay((display) => (visible ? \"flex\" : display));\n    },\n  });\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = useState<number>(1);\n\n  useLayoutEffect(() => {\n    if (ref && ref.current) {\n      setHeight(ref.current.offsetHeight + 20);\n    }\n  });\n\n  // Maintain movie aspect ratio\n  const imageWidth = height / 1.583;\n\n  // Again, the `as any` casts are needed because of a bug in react spring:\n  // https://github.com/react-spring/react-spring/issues/1102\n  return fullInfo ? (\n    <PopupContainer style={{ display }}>\n      <PopupBackground\n        style={{ ...backgroundStyle } as any}\n        onClick={onClose}\n      />\n      <Popup style={popupStyle as any}>\n        <FullHorizontalWrapper>\n          <MovieInfoImage\n            url={getLinkHighRes(fullInfo.posterUrl)}\n            fallbackTitle={fullInfo.title}\n            iconSize={64}\n            style={{\n              minWidth: imageWidth,\n              width: imageWidth,\n              maxWidth: imageWidth,\n\n              minHeight: height,\n              height: height,\n              maxHeight: height,\n            }}\n          />\n          <FactsWrapper ref={ref}>\n            <MediumHeading>{fullInfo.title}</MediumHeading>\n            <MovieFact\n              Icon={FeatherIcons.Calendar}\n              value={fullInfo.releaseDate}\n              notFoundText={\"Date not found\"}\n            >\n              <NormalTextSmall>\n                Released on{\" \"}\n                <b>{new Date(fullInfo.releaseDate!).toLocaleDateString()}</b>\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact Icon={FeatherIcons.User}>\n              <NormalTextSmall>\n                Starring <b>{addAnd(fullInfo.actors)}</b>\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.FileText}\n              value={fullInfo.plot}\n              notFoundText=\"Summary not available\"\n            >\n              <NormalTextSmall>\n                <b>Synopsis</b>: {fullInfo.plot}\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.Film}\n              value={fullInfo.ageRating}\n              notFoundText=\"Not rated\"\n            >\n              <NormalTextSmall>\n                Rated <b>{fullInfo.ageRating}</b>\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.Database}\n              value={fullInfo.imdbRating}\n              notFoundText=\"Not ranked on IMDB\"\n            >\n              <NormalTextSmall>\n                Ranked <b>{fullInfo.imdbRating}/10</b> on IMDB{\" \"}\n                {fullInfo.imdbVotes !== null ? (\n                  <b>{fullInfo.imdbVotes} votes</b>\n                ) : (\n                  <></>\n                )}\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.DollarSign}\n              value={fullInfo.boxOffice}\n              notFoundText=\"Box office not available\"\n            >\n              <NormalTextSmall>\n                <b>{fullInfo.boxOffice}</b> in Box Office\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.Briefcase}\n              value={fullInfo.productionCompany}\n              notFoundText=\"Producer not available\"\n            >\n              <NormalTextSmall>\n                Produced by <b>{addAnd(fullInfo.productionCompany)}</b>\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.Flag}\n              value={fullInfo.country}\n              notFoundText=\"Country not available\"\n            >\n              <NormalTextSmall>\n                Produced in <b>{fullInfo.country}</b>\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.Globe}\n              value={fullInfo.language}\n              notFoundText=\"Language not found\"\n            >\n              <NormalTextSmall>\n                Spoken in <b>{addAnd(fullInfo.language)}</b>\n              </NormalTextSmall>\n            </MovieFact>\n            <MovieFact\n              Icon={FeatherIcons.Layers}\n              value={fullInfo.genre}\n              notFoundText=\"No genres found\"\n            >\n              <NormalTextSmall>\n                Genre\n                {\n                  // Make \"Genre\" plural if the length is greater than one\n                  fullInfo.genre\n                    ? fullInfo.genre.split(\",\").length > 1\n                      ? \"s\"\n                      : \"\"\n                    : \"\"\n                }\n                : <b>{addAnd(fullInfo.genre)}</b>\n              </NormalTextSmall>\n            </MovieFact>\n          </FactsWrapper>\n        </FullHorizontalWrapper>\n        <RemoveButton onClick={onClose} marginTop={21} marginRight={16}>\n          <FeatherIcons.X size={23} color=\"black\" />\n        </RemoveButton>\n      </Popup>\n    </PopupContainer>\n  ) : (\n    <></>\n  );\n};\n\nexport default MovieInfoPopup;\n","/home/jonathan/Documents/programming/the-shoppies/src/components/MovieResults.tsx",[],"/home/jonathan/Documents/programming/the-shoppies/src/components/Text.tsx",["37"],"/home/jonathan/Documents/programming/the-shoppies/src/components/Wrappers.tsx",[],{"ruleId":"38","severity":1,"message":"39","line":81,"column":6,"nodeType":"40","endLine":81,"endColumn":19,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"42","line":156,"column":3,"nodeType":"43","endLine":156,"endColumn":18,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":3,"nodeType":"47","messageId":"48","endLine":15,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'modifiedOrder.length' and 'notificationIdx'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNotifications' needs the current value of 'notificationIdx'.","ArrayExpression",["49"],"React Hook useLayoutEffect contains a call to 'setHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useLayoutEffect Hook.","Identifier",["50"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [modifiedOrder.length, nominations, notificationIdx]",{"range":"55","text":"56"},"Add dependencies array: []",{"range":"57","text":"58"},[2583,2596],"[modifiedOrder.length, nominations, notificationIdx]",[3243,3243],", []"]